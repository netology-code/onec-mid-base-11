
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//++ Марин С.И_________ 18.01.2025
	Группа = Элементы.Добавить("ГруппаСкидкаКнопка",Тип("ГруппаФормы"),Элементы.ГруппаШапкаЛево);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	Если  Элементы.Найти("ДЗ_КонтактноеЛицоЭлемент") = Неопределено Тогда
		НовыйЭлемент = Элементы.Добавить("ДЗ_КонтактноеЛицоЭлемент",Тип("ПолеФормы"),Элементы.ГруппаШапкаПраво);
		НовыйЭлемент.ПутьКДанным = "Объект.ДЗ_КонтактноеЛицо";
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.Заголовок = "Контактное лицо";
	КонецЕсли; 
	
	Если  Элементы.Найти("ДЗ_СогласованнаяСкидкаЭлемент") = Неопределено Тогда
		НовыйЭлемент = Элементы.Добавить("ДЗ_СогласованнаяСкидкаЭлемент",Тип("ПолеФормы"),Группа);
		НовыйЭлемент.ПутьКДанным = "Объект.ДЗ_СогласованнаяСкидка";
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.Заголовок = "Согласованная скидка"; 
		НовыйЭлемент.УстановитьДействие("ПриИзменении","ДЗ_СогласованнаяСкидкаПриИзменении")
	КонецЕсли; 
	
	Если Элементы.Найти("КнопкаПересчитатьТаблицу") = Неопределено Тогда
		КомандаПересчитатьТаблицу = Команды.Добавить("ПересчитатьТаблицу");
		КомандаПересчитатьТаблицу.Заголовок = "Пересчитать таблицу";
		КомандаПересчитатьТаблицу.Действие = "КомандаПересчитатьТаблицу";
		
		КнопкаКоманды = Элементы.Добавить("КнопкаПересчитатьТаблицу",Тип("КнопкаФормы"),Группа);
		КнопкаКоманды.ИмяКоманды = "ПересчитатьТаблицу";
		КнопкаКоманды.Вид = ВидКнопкиФормы.ОбычнаяКнопка; 
	КонецЕсли;  
	
	//--Марин С.И_________ 18.01.2025
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//@skip-check module-unused-method
&НаКлиенте
Процедура КомандаПересчитатьТаблицу(Команда)  
	//++ Марин С.И_________ 18.01.2025
	ПерерасчетТабличнойЧастиТовары(); 
	ПерерасчетТабличнойЧастиУслуги();
	//-- Марин С.И_________ 18.01.2025
КонецПроцедуры

&НаКлиенте
Процедура ПерерасчетТабличнойЧастиТовары() 
	//++ Марин С.И_________ 18.01.2025
	Для Каждого ТекущаяСтрокаТовары Из Объект.Товары Цикл  
		РассчитатьСуммуСтроки(ТекущаяСтрокаТовары); 
	КонецЦикла;
	//-- Марин С.И_________ 18.01.2025
КонецПроцедуры

&НаКлиенте                                                
Процедура ПерерасчетТабличнойЧастиУслуги()  
	//++ Марин С.И_________ 18.01.2025
	Для Каждого ТекущаяСтрокауслуги Из Объект.Услуги Цикл  
		РассчитатьСуммуСтроки(ТекущаяСтрокаУслуги); 
	КонецЦикла;
	//-- Марин С.И_________ 18.01.2025
КонецПроцедуры

&НаКлиенте
Асинх Процедура ДЗ_СогласованнаяСкидкаПриИзменении(Элемент)

	//++ Марин С.И_________ 18.01.2025
	Если Объект.Товары.Количество() = 0 И Объект.Услуги.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Ждать ВопросАсинх("Изменен процент скидки. Пересчитать таблицу товаров и услуг?",
	РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПерерасчетТабличнойЧастиТовары(); 
		ПерерасчетТабличнойЧастиУслуги();	 
	Иначе
		Возврат;
	КонецЕсли;
	//-- Марин С.И_________ 18.01.2025
КонецПроцедуры  

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//++ Марин С.И.___________________ 18.01.2025
	// Расчет суммы с учетом скидки
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество*(1- Объект.ДЗ_СогласованнаяСкидка / 100);
	//-- Марин С.И.___________________ 18.01.2025
	
	РассчитатьСуммуДокумента();	

КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
