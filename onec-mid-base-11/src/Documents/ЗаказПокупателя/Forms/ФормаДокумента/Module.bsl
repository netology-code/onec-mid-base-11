
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//Комарчева Отрисовка элементов формы
	
	Группа = Элементы.Добавить("ГруппаСкидкаКнопка", Тип("ГруппаФормы"), Элементы.ГруппаШапкаЛево);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	
	ПолеВводаСкидки = Элементы.Добавить("ак_СогласованнаяСкидка", Тип("ПолеФормы"), Группа);
	ПолеВводаСкидки.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВводаСкидки.ПутьКДанным = "Объект.ак_СогласованнаяСкидка"; 
	ПолеВводаСкидки.УстановитьДействие("ПриИзменении", "ПриИзмененииСкидки"); 
	
	КомандаПересчитать = Команды.Добавить("ПересчитатьСтроки");
	КомандаПересчитать.Заголовок = "Пересчитать строки"; 
	КомандаПересчитать.Действие = "ПересчитатьСтроки";
	
	КомандаПересчитатьКнопка = Элементы.Добавить("КнопкаПересчитатьСтроки", Тип("КнопкаФормы"), Группа); 
	КомандаПересчитатьКнопка.ИмяКоманды = "ПересчитатьСтроки";
	КомандаПересчитатьКнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка; 
	
	//Конец
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//Комарчева РасчетСкидки 
	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	ЦенаСКоэффициентом = ТекущиеДанные.Цена * КоэффициентСкидки;
	ЦенаСоСкидкой = ТекущиеДанные.Цена * Объект.ак_СогласованнаяСкидка / 100;
	
	Если ТекущиеДанные.Скидка + Объект.ак_СогласованнаяСкидка > 100 Тогда
		ТекущиеДанные.Сумма = 0;  
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Сумма скидок товара/услуги: %1 не может быть больше 100 процентов!", ТекущиеДанные.Номенклатура);
		Сообщение.Сообщить();
		
	Иначе
		ТекущиеДанные.Сумма = (ЦенаСКоэффициентом - ЦенаСоСкидкой) * ТекущиеДанные.Количество;
	КонецЕсли;
	
	//Конец	

	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

//Комарчева_Механизм работы скидки  

&НаКлиенте
Асинх Процедура ПриИзмененииСкидки()    
	
	Если Не ЗначениеЗаполнено(Объект.Товары)
		И Не ЗначениеЗаполнено(Объект.Услуги) Тогда
		Возврат;
	КонецЕсли;
	
	ОтветПользователя = Ждать ВопросАсинх("Сумма скидки изменилась. Пересчитать строки таблицы?", РежимДиалогаВопрос.ДаНет); 
	
	Если ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаОтветаПользователя();
	
КонецПроцедуры	 

&НаКлиенте
Процедура ОбработкаОтветаПользователя() 
	
	Для Каждого ТекДанныеТовары Из Объект.Товары Цикл
		
		РассчитатьСуммуСтроки(ТекДанныеТовары);
		
	КонецЦикла;  
	
	Для Каждого ТекДанныеУслуги Из Объект.Услуги Цикл
		
		РассчитатьСуммуСтроки(ТекДанныеУслуги); 
		
	КонецЦикла;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры	

//Конец

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 

//Комарчева Обработка команды пересчета строк после применения скидки   
&НаКлиенте
Процедура ПересчитатьСтроки(Команда) 
	
	ОбработкаОтветаПользователя();
	
КонецПроцедуры	
//конец

#КонецОбласти

#КонецОбласти
