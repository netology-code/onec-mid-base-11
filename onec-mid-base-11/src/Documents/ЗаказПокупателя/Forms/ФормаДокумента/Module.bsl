
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// +++++ Павленко А.В. Изменен рассчет суммы по строке, с учетом согласованной скидки
    //Исходный код
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	//
    //Новый код 
    Если (ТекущиеДанные.Скидка + Объект.АВ_СогласованнаяСкидка) <= 100 Тогда
    КоэффициентСкидки = 1 - (ТекущиеДанные.Скидка + Объект.АВ_СогласованнаяСкидка) / 100;
    Иначе КоэффициентСкидки = 0;
    Сообщить(СтрШаблон("Указанная суммарная скидка превышает 100 процентов, к номенклатуре: %1 применена максимальная скидка 100 процентов",
    ТекущиеДанные.Номенклатура));
    КонецЕсли;
    ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
    
    РассчитатьСуммуДокумента();
    // +++++
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура АВ_СогласованнаяСкидкаПриИзменении(Элемент)
    
    // +++++ Павленко А.В. Обработчик события при изменении элемента формы
    
    ТЧТовары = Объект.Товары;
    ТЧУслуги = Объект.Услуги;
    
    Если ТЧТовары.Количество() > 0 Или ТЧУслуги.Количество() > 0 Тогда
        
        Обещание = ВопросАсинх("Изменен процент скидки. Пересчитать таблицы Товаров и Услуг?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
        Результат = Ждать Обещание; // тут выполнение остановится пока пользователь не ответит на вопрос
        
        Если Результат = КодВозвратаДиалога.Да Тогда
            
            АВ_ПересчетТаблицТоварыИУслуги();
          Иначе
            Возврат;
            
        КонецЕсли;
        
    КонецЕсли;
    
    // +++++
    
КонецПроцедуры

&НаКлиенте
Процедура АВ_ПересчитатьТаблицуПосле(Команда)
    
    // +++++ Павленко А.В. Добавление команды на пересчет таблиц
    
    АВ_ПересчетТаблицТоварыИУслуги();
    
    // +++++
    
КонецПроцедуры


&НаКлиенте
Процедура АВ_ПересчетТаблицТоварыИУслуги()
    
    // +++++ Павленко А.В. Добавлен пересчет таблиц
    
    Для Каждого СтрокаТЧ Из Объект.Товары Цикл
       РассчитатьСуммуСтроки(СтрокаТЧ);
    КонецЦикла;
        
    Для Каждого СтрокаТЧ Из Объект.Услуги Цикл
       РассчитатьСуммуСтроки(СтрокаТЧ);
    КонецЦикла;
    
    РассчитатьСуммуДокумента();
    
    // +++++
    
КонецПроцедуры
/////////////////////////////////////////
&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
