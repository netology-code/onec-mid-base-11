
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ++ ШкоденкоМС 24.05.2025
	ДобавитьРеквизитыНаФорму();
	// -- ШкоденкоМС
	// Тестовый комментарий для коммита
	// Еще один комментарий 5
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура КомандаРассчитатьСкидку(Команда)
	// ++ ШкоденкоМС 24.05.2025
	ПерерасчитатьСуммыСУчетомСкидки();
	// -- ШкоденкоМС
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыНаФорму()
	
	// ++ ШкоденкоМС - Задача (Внесение изменений в конф. на поддержке) 24.05.2025
	Если Элементы.Найти("ГруппаРасчетСкидки") = Неопределено Тогда
		// Добавление группы на форму 
		Группа = Элементы.Добавить("ГруппаРасчетСкидки", Тип("ГруппаФормы"), Элементы.Найти("ГруппаШапкаЛево"));
		Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		Группа.Видимость = Истина;
		//Группа.Отображение = ОтображениеОбычнойГруппы.Нет; // Оставил для себя комментарий
		Группа.ОтображатьЗаголовок = Ложь;
		
		Если Элементы.Найти("РазмерСкидки") = Неопределено Тогда
			//Комментарий оставил для себя
			// Создание и добавление реквизита на форму
			//НовыеРеквизиты = Новый Массив;
			//КлассификаторЧисла = Новый КвалификаторыЧисла(5,2);
			//ТипРеквизита = Новый ОписаниеТипов("Число",,,КлассификаторЧисла);
			//РеквизитСкидки = Новый РеквизитФормы("РазмерСкидки", ТипРеквизита, "", "Размер скидки");
			//НовыеРеквизиты.Добавить(РеквизитСкидки);
			//ИзменитьРеквизиты(НовыеРеквизиты);
			
			НовыйЭлемент = Элементы.Добавить("ДЗ_РазмерСкидки", Тип("ПолеФормы"), Группа);
			НовыйЭлемент.ПутьКДанным = "Объект.ДЗ_РазмерСкидки";
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.УстановитьДействие("ПриИзменении", "ПриИзмененииСогласованнойСкидки");
		КонецЕсли;
		
		Если Элементы.Найти("РассчитатьСкидку") = Неопределено Тогда
			// Добавление команды на форму
			КомандаРассчитать = Команды.Добавить("РассчитатьСкидку");
			КомандаРассчитать.Заголовок = "Рассчитать скидку";
			КомандаРассчитать.Действие = "КомандаРассчитатьСкидку";
			
			КнопкаКоманды = Элементы.Добавить("КомандаРассчитать", Тип("КнопкаФормы"), Группа);
			КнопкаКоманды.ИмяКоманды = "РассчитатьСкидку";
			КнопкаКоманды.КнопкаПоУмолчанию = Истина;
			КнопкаКоманды.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Элементы.Найти("ДЗ_КонтактноеЛицо") = Неопределено Тогда
		// Добавление существующего реквизита на форму
		НовыйЭлемент = Элементы.Добавить("ДЗ_КонтактноеЛицо", Тип("ПолеФормы"), Элементы.Найти("ГруппаШапкаПраво"));
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.ПутьКДанным = "Объект.ДЗ_КонтактноеЛицо";
	КонецЕсли;
	// -- ШкоденкоМС
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПриИзмененииСогласованнойСкидки()
	// ++ ШкоденкоМС - Задача (Внесение изменений в конф. на поддержке) 24.05.2025
	Если Объект.Товары.Количество() > 0 ИЛИ Объект.Услуг.Количество() > 0 Тогда
		Ответ = Ждать ВопросАсинх("Изменен процент скидки. Персчитать таблицы ""Товары и Услуги""", 
		РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да, "Внимание!");
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ПерерасчитатьСуммыСУчетомСкидки();
		КонецЕсли;
	КонецЕсли;
	// -- ШкоденкоМС
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура ПерерасчитатьСуммыСУчетомСкидки()
	
	// ++ ШкоденкоМС - Задача (Внесение изменений в конф. на поддержке) 24.05.2025
	Для Каждого Строка Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(Строка);
	КонецЦикла;
	Для Каждого Строка Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(Строка);
	КонецЦикла;
	РассчитатьСуммуДокумента();
	// -- ШкоденкоМС
	
КонецПроцедуры


#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
